---
###############################################################################
# This playbook utilizes the ios_command ansible module to execute a set of
# show commands from a varialbe file in group_vars against the cisco devices
# defined in the [lab] group within the hosts file.
# The command executes a list of show commands
# using with_items and saves the result of each command into the output variable.
# The show commands are in a list variable in group_vars/ios_cmdlist.yml.  This
# facilitates changing out the show commands without having to edit the playbook
# itself and provides a more modular approach.
#
# The with_items construct results in a dictionary data structure that could be
# manipulated more precisely in follow on actions.  Rather then reference an
# element in a list by number, the exact data can be reference by a key in a
# dictionary.
#
# The with_items construct also renders the display a bit more descriptive.
#
# The output variable is then displayed as part of the playbook run only if -v
# is used (1 v) - give me a single ping Vasili, one ping only please
#
# The contents of the output variable are then saved using a Jinja filter that
# renders the output as "pretty" JSON
#
# EXECUTION:
# ansible-playbook -i hosts ios_show_cmdlist.yml --ask-vault-pass
#
# To display the output variable run the playbook with a single v
# ansible-playbook -i hosts ios_show_cmdlist.yml --ask-vault-pass -v
# Cisco123
###############################################################################

- import_playbook: get_vrfs.yml

- hosts: cisco_xe
  gather_facts: False

  vars:
    ip_arp_output: []

  roles:
    - ansible-network.network-engine

  tasks:

    - name: "Ansible | List all known variables and facts"
      debug:
        var: hostvars[inventory_hostname]
        verbosity: 1

    - name: List just the vrfs in the vrf_list variable from the get_vrfs playbook
      debug: var=vrf_list

    - name: Exceute show ip arp show command on default VRF
      ios_command:
        commands: " show ip arp"
      register: output0

    - name: Exceute custom show ip arp vrf <vrf> command
      ios_command:
        commands: " show ip arp vrf {{ item }} "
      with_items:
        - "{{ vrf_list }}"
      register: output1
      ignore_errors: yes

    - set_fact:
        ip_arp_output: "['{{ output0 }}'] + ['{{ output }}' ]"

    - name: Display the output
      debug:
        msg:
          "{{ ip_arp_output | to_json }}"